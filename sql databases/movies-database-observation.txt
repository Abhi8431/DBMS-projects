
--Create Table ACTOR with Primary Key as ACT_ID

CREATE TABLE ACTOR (
ACT_ID INTEGER PRIMARY KEY,
ACT_NAME VARCHAR(20),
ACT_GENDER CHAR(1));

DESC ACTOR;

----------------------------

--Create Table DIRECTOR with Primary Key as DIR_ID

CREATE TABLE DIRECTOR(
DIR_ID INTEGER PRIMARY KEY,
DIR_NAME VARCHAR(20),
DIR_PHONE INTEGER);

DESC DIRECTOR;

----------------------------

--Create Table MOVIES with Primary Key as MOV_ID and Foreign Key DIR_ID referring DIRECTOR table

CREATE TABLE MOVIES(
MOV_ID INTEGER PRIMARY KEY,
MOV_TITLE VARCHAR(25),
MOV_YEAR INTEGER,
MOV_LANG VARCHAR(15),
DIR_ID INTEGER,
FOREIGN KEY (DIR_ID) REFERENCES DIRECTOR(DIR_ID));

DESC MOVIES;

----------------------------

--Create Table MOVIE_CAST with Primary Key as MOV_ID and ACT_ID and Foreign Key ACT_ID and MOV_ID referring ACTOR and MOVIES tables respectively

CREATE TABLE MOVIE_CAST(
ACT_ID INTEGER,
MOV_ID INTEGER,
ROLE VARCHAR(10),
PRIMARY KEY (ACT_ID,MOV_ID),
FOREIGN KEY (ACT_ID) REFERENCES ACTOR(ACT_ID),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES(MOV_ID));

DESC MOVIE_CAST;

----------------------------

--Create Table RATING with Primary Key as MOV_ID and Foreign Key MOV_ID referring MOVIES table

CREATE TABLE RATING(
MOV_ID INTEGER PRIMARY KEY,
REV_STARS VARCHAR(25),
FOREIGN KEY (MOV_ID) REFERENCES MOVIES(MOV_ID));


DESC RATING;
Footer









































































create database movie413

---------------------------------------------------------------------

use movie413

---------------------------------------------------------------------

create table actor(act_id int(20) primary key, act_name varchar(100), act_gender varchar);
+------------+--------------+------+-----+---------+-------+
| Field      | Type         | Null | Key | Default | Extra |
+------------+--------------+------+-----+---------+-------+
| act_id     | int          | NO   | PRI | NULL    |       |
| act_name   | varchar(100) | YES  |     | NULL    |       |
| act_gender | varchar(10)  | YES  |     | NULL    |       |
+------------+--------------+------+-----+---------+-------+

insert into actor values('11','ajay','m');

--------------------------------------------------------------------

create table director(dir_id int(20) primary key,dir_name varchar(100),dir_phone int(20));
+-----------+--------------+------+-----+---------+-------+
| Field     | Type         | Null | Key | Default | Extra |
+-----------+--------------+------+-----+---------+-------+
| dir_id    | int          | NO   | PRI | NULL    |       |
| dir_name  | varchar(100) | YES  |     | NULL    |       |
| dir_phone | int          | YES  |     | NULL    |       |
+-----------+--------------+------+-----+---------+-------+

insert into director values('21','suma','1234567890');

--------------------------------------------------------------------

create table movies(mov_id int(20) primary key, mov_name varchar(100), mov_year date, mov_lang varchar(100), dir_id int(20), Foreign key(dir_id) REFERENCES director(dir_id));
+----------+--------------+------+-----+---------+-------+
| Field    | Type         | Null | Key | Default | Extra |
+----------+--------------+------+-----+---------+-------+
| mov_id   | int          | NO   | PRI | NULL    |       |
| mov_name | varchar(100) | YES  |     | NULL    |       |
| mov_year | date         | YES  |     | NULL    |       |
| mov_lang | varchar(100) | YES  |     | NULL    |       |
| dir_id   | int          | YES  | MUL | NULL    |       |
+----------+--------------+------+-----+---------+-------+

insert into movies values('31','vr','2000-08-07','kannada','21');

--------------------------------------------------------------------

create table movie_cast(act_id int(20), Foreign key(act_id) REFERENCES actor(act_id), mov_id int(20), Foreign key(mov_id) REFERENCES
movies(mov_id), role varchar(50));
+--------+-------------+------+-----+---------+-------+
| Field  | Type        | Null | Key | Default | Extra |
+--------+-------------+------+-----+---------+-------+
| act_id | int         | YES  | MUL | NULL    |       |
| mov_id | int         | YES  | MUL | NULL    |       |
| role   | varchar(50) | YES  |     | NULL    |       |
+--------+-------------+------+-----+---------+-------+

insert into movie_cast values('11','31','hero');

-------------------------------------------------------------------

create table rating(mov_id int(20), Foreign key(mov_id) REFERENCES movies(mov_id), rev_star varchar(50));
+----------+-------------+------+-----+---------+-------+
| Field    | Type        | Null | Key | Default | Extra |
+----------+-------------+------+-----+---------+-------+
| mov_id   | int         | YES  | MUL | NULL    |       |
| rev_star | varchar(50) | YES  |     | NULL    |       |
+----------+-------------+------+-----+---------+-------+

insert into rating values('31','s');



/**********************************************************quaries*********************************************************************/





show tables;
+----------------+
| Tables_in_abhi |
+----------------+
| actor          |
| director       |
| movie_cast     |
| movies         |
| rating         |
+----------------+



mysql> select * from actor;
+-------+---------+-----------+
| actid | actname | actgender |
+-------+---------+-----------+
| A001  | abc     | m         |
| A002  | xzy     | m         |
| A003  | efg     | f         |
+-------+---------+-----------+



mysql> select *from movies;
+--------+----------+------------+----------+-------+
| mov_id | mov_name | mov_year   | mov_lang | dirid |
+--------+----------+------------+----------+-------+
|      1 | movie1   | 2000-04-21 | english  | D001  |
|      2 | movie2   | 2010-05-11 | Hindi    | D001  |
|      3 | movie3   | 2022-09-22 | kannada  | D003  |
+--------+----------+------------+----------+-------+


mysql> select *from movie_cast;
+-------+--------+--------+
| actid | mov_id | role   |
+-------+--------+--------+
| A001  |      1 | hero   |
| A003  |      3 | heroin |
+-------+--------+--------+




mysql> select *from rating;
+--------+----------+
| mov_id | rev_star |
+--------+----------+
|      1 | s        |
|      3 | s        |
+--------+----------+


mysql> update rating
    -> set rev_star = 'c' where mov_id = '3';

mysql> select *from rating;
+--------+----------+
| mov_id | rev_star |
+--------+----------+
|      1 | s        |
|      3 | c        |
+--------+----------+

mysql> select actname from actor;
+---------+
| actname |
+---------+
| abc     |
| xzy     |
| efg     |
+---------+



mysql> select actname from actor where actgender = 'm';
+---------+
| actname |
+---------+
| abc     |
| xzy     |
+---------+




mysql> select mov_name,dirname from movies m,director d,rating r where d.dirid = m.dirid and m.mov_id=r.mov_id and r.rev_star='c';
+----------+---------+
| mov_name | dirname |
+----------+---------+
| movie3   | ccc     |
+----------+---------+

-------------------------------------------------------------------











































-List the titles of all movies directed by ‘Hitchcock’.

SELECT MOV_TITLE
FROM MOVIES
WHERE DIR_ID = (SELECT DIR_ID
FROM DIRECTOR
WHERE DIR_NAME='HITCHCOCK');

---------------------------------

--Find the movie names where one or more actors acted in two or more movies.

SELECT MOV_TITLE
FROM MOVIES M,MOVIE_CAST MC
WHERE M.MOV_ID=MC.MOV_ID AND ACT_ID IN (SELECT ACT_ID
FROM MOVIE_CAST GROUP BY ACT_ID
HAVING COUNT(ACT_ID)>1)
GROUP BY MOV_TITLE
HAVING COUNT(*)>1;

--------------------------------

--List all actors who acted in a movie before 2000 and also in a movie after 2015 (use JOIN operation).

SELECT ACT_NAME
FROM ACTOR A
JOIN MOVIE_CAST C
ON A.ACT_ID=C.ACT_ID
JOIN MOVIES M
ON C.MOV_ID=M.MOV_ID
WHERE M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

--------------------------------

--Find the title of movies and number of stars for each movie that has at least one rating 
--and find the highest number of stars that movie received. Sort the result by
--movie title.

SELECT MOV_TITLE,MAX(REV_STARS)
FROM MOVIES
INNER JOIN RATING USING (MOV_ID)
GROUP BY MOV_TITLE
HAVING MAX(REV_STARS)>0
ORDER BY MOV_TITLE;

---------------------------------

--Update rating of all movies directed by ‘Steven Spielberg’ to 5.

UPDATE RATING
SET REV_STARS=5
WHERE MOV_ID IN (SELECT MOV_ID FROM MOVIES
WHERE DIR_ID IN (SELECT DIR_ID
FROM DIRECTOR
WHERE DIR_NAME='STEVEN SPIELBERG'));



